/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AccountListRelationFilter } from "../../account/base/AccountListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { IntFilter } from "../../util/IntFilter";
import { BetListRelationFilter } from "../../bet/base/BetListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { FishBankWhereUniqueInput } from "../../fishBank/base/FishBankWhereUniqueInput";
import { GameBankWhereUniqueInput } from "../../gameBank/base/GameBankWhereUniqueInput";
import { StatGameListRelationFilter } from "../../statGame/base/StatGameListRelationFilter";
import { GameListRelationFilter } from "../../game/base/GameListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { ProductListRelationFilter } from "../../product/base/ProductListRelationFilter";
import { BalanceTransactionListRelationFilter } from "../../balanceTransaction/base/BalanceTransactionListRelationFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";

@InputType()
class ShopWhereInput {
  @ApiProperty({
    required: false,
    type: () => AccountListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AccountListRelationFilter)
  @IsOptional()
  @Field(() => AccountListRelationFilter, {
    nullable: true,
  })
  accounts?: AccountListRelationFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  balance?: IntFilter;

  @ApiProperty({
    required: false,
    type: () => BetListRelationFilter,
  })
  @ValidateNested()
  @Type(() => BetListRelationFilter)
  @IsOptional()
  @Field(() => BetListRelationFilter, {
    nullable: true,
  })
  bets?: BetListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  code?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  createdAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  facialRecognition?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: () => FishBankWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => FishBankWhereUniqueInput)
  @IsOptional()
  @Field(() => FishBankWhereUniqueInput, {
    nullable: true,
  })
  fishBank?: FishBankWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => GameBankWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => GameBankWhereUniqueInput)
  @IsOptional()
  @Field(() => GameBankWhereUniqueInput, {
    nullable: true,
  })
  gameBank?: GameBankWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => StatGameListRelationFilter,
  })
  @ValidateNested()
  @Type(() => StatGameListRelationFilter)
  @IsOptional()
  @Field(() => StatGameListRelationFilter, {
    nullable: true,
  })
  gameStatsAccount?: StatGameListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => GameListRelationFilter,
  })
  @ValidateNested()
  @Type(() => GameListRelationFilter)
  @IsOptional()
  @Field(() => GameListRelationFilter, {
    nullable: true,
  })
  games?: GameListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isActive?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isMfaRequired?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ProductListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProductListRelationFilter)
  @IsOptional()
  @Field(() => ProductListRelationFilter, {
    nullable: true,
  })
  product?: ProductListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  shopSettingsId?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  tenantId?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => BalanceTransactionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => BalanceTransactionListRelationFilter)
  @IsOptional()
  @Field(() => BalanceTransactionListRelationFilter, {
    nullable: true,
  })
  transactions?: BalanceTransactionListRelationFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  updatedAt?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  url?: StringNullableFilter;
}

export { ShopWhereInput as ShopWhereInput };
