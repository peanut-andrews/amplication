/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Account } from "../../account/base/Account";

import {
  ValidateNested,
  IsOptional,
  IsInt,
  Max,
  IsDate,
  IsString,
  MaxLength,
  IsNumber,
} from "class-validator";

import { Type } from "class-transformer";
import { Game } from "../../game/base/Game";
import { Shop } from "../../shop/base/Shop";

@ObjectType()
class Bet {
  @ApiProperty({
    required: false,
    type: () => Account,
  })
  @ValidateNested()
  @Type(() => Account)
  @IsOptional()
  account?: Account | null;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @Field(() => Number)
  betAmount!: number;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  currency!: string;

  @ApiProperty({
    required: false,
    type: () => Game,
  })
  @ValidateNested()
  @Type(() => Game)
  @IsOptional()
  game?: Game | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @Field(() => Number)
  multiplier!: number;

  @ApiProperty({
    required: false,
    type: () => Shop,
  })
  @ValidateNested()
  @Type(() => Shop)
  @IsOptional()
  shop?: Shop | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @Field(() => Number)
  winAmount!: number;
}

export { Bet as Bet };
