/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  StatGame as PrismaStatGame,
  Game as PrismaGame,
  Person as PrismaPerson,
  Shop as PrismaShop,
} from "@prisma/client";

export class StatGameServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.StatGameCountArgs, "select">): Promise<number> {
    return this.prisma.statGame.count(args);
  }

  async statGames(
    args: Prisma.StatGameFindManyArgs
  ): Promise<PrismaStatGame[]> {
    return this.prisma.statGame.findMany(args);
  }
  async statGame(
    args: Prisma.StatGameFindUniqueArgs
  ): Promise<PrismaStatGame | null> {
    return this.prisma.statGame.findUnique(args);
  }
  async createStatGame(
    args: Prisma.StatGameCreateArgs
  ): Promise<PrismaStatGame> {
    return this.prisma.statGame.create(args);
  }
  async updateStatGame(
    args: Prisma.StatGameUpdateArgs
  ): Promise<PrismaStatGame> {
    return this.prisma.statGame.update(args);
  }
  async deleteStatGame(
    args: Prisma.StatGameDeleteArgs
  ): Promise<PrismaStatGame> {
    return this.prisma.statGame.delete(args);
  }

  async getGameItem(parentId: string): Promise<PrismaGame | null> {
    return this.prisma.statGame
      .findUnique({
        where: { id: parentId },
      })
      .gameItem();
  }

  async getPerson(parentId: string): Promise<PrismaPerson | null> {
    return this.prisma.statGame
      .findUnique({
        where: { id: parentId },
      })
      .person();
  }

  async getShop(parentId: string): Promise<PrismaShop | null> {
    return this.prisma.statGame
      .findUnique({
        where: { id: parentId },
      })
      .shop();
  }
}
