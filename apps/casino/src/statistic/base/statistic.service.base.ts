/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Statistic as PrismaStatistic } from "@prisma/client";

export class StatisticServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.StatisticCountArgs, "select">
  ): Promise<number> {
    return this.prisma.statistic.count(args);
  }

  async statistics(
    args: Prisma.StatisticFindManyArgs
  ): Promise<PrismaStatistic[]> {
    return this.prisma.statistic.findMany(args);
  }
  async statistic(
    args: Prisma.StatisticFindUniqueArgs
  ): Promise<PrismaStatistic | null> {
    return this.prisma.statistic.findUnique(args);
  }
  async createStatistic(
    args: Prisma.StatisticCreateArgs
  ): Promise<PrismaStatistic> {
    return this.prisma.statistic.create(args);
  }
  async updateStatistic(
    args: Prisma.StatisticUpdateArgs
  ): Promise<PrismaStatistic> {
    return this.prisma.statistic.update(args);
  }
  async deleteStatistic(
    args: Prisma.StatisticDeleteArgs
  ): Promise<PrismaStatistic> {
    return this.prisma.statistic.delete(args);
  }
}
